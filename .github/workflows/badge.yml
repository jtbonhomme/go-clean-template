name: "Create badge"
on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize

jobs:
  badges:
    runs-on: ubuntu-latest
    name: Creates a badge with coverage
    steps:
      - name: Setup Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      - name: Checkout master
        uses: actions/checkout@v3

      - name: Make tests
        id: make_test
        run: |
          make test
          coverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          echo "coverage=$coverage"
          echo "coverage=$coverage" >> $GITHUB_OUTPUT

      - name: Prepare environment
        id: coverage
        run: |
          # Generates a GitHub Workflow output named `lines` with a coverage value
          echo "lines=${COVERAGE}"
          echo "lines=${COVERAGE}" >> "${GITHUB_OUTPUT}"
        env:
          COVERAGE: ${{ steps.make_test.outputs.coverage }}

      # Create the directory where badges will be saved, if needed
      - name: Create destination directory
        id: create_badge_dir
        run: |
          # Generates a GitHub Workflow output named `path` with the badge relative path
          echo "path=${BADGE_PATH}" >> "${GITHUB_OUTPUT}"
          # Creates the badge directory by removing the last fragment of the badge relative path ('%/*')
          mkdir -p "${BADGE_PATH%/*}"
        env:
          BADGE_PATH: ".badges/coverage-badge.svg"
  
      # Use the output from the `coverage` step
      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v2.0.2
        id: badge
        with:
          label: 'Test coverage'
          status: ${{ steps.coverage.outputs.lines }}
          color: 'blue,555,daf'
          path: ${{ steps.create_badge_dir.outputs.path }}
  
      - name: Upload badge as artifact
        uses: actions/upload-artifact@v3
        with:
          name: badge
          path: ${{ steps.create_badge_dir.outputs.path }}
          if-no-files-found: error
  
      - name: Commit badge
        continue-on-error: true
        env:
          BADGE: ${{ steps.create_badge_dir.outputs.path }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add "${BADGE}"
          git commit -m "Add/Update badge"

      - name: Push badge commit
        uses: ad-m/github-push-action@master
        if: ${{ success() }}
        with:
          force: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}